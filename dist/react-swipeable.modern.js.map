{"version":3,"file":"react-swipeable.modern.js","sources":["../src/index.ts"],"sourcesContent":["/* global document */\nimport * as React from \"react\";\n\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type EventData = {\n  event: HandledEvents;\n  deltaX: number;\n  deltaY: number;\n  absX: number;\n  absY: number;\n  first: boolean;\n  initial: Vector2;\n  velocity: number;\n  dir: \"Left\" | \"Right\" | \"Up\" | \"Down\";\n};\n\nexport type SwipeCallback = (eventData: EventData) => void;\n\nexport interface SwipeableOptions {\n  // Event handler/callbacks\n  onSwiped?: SwipeCallback;\n  onSwipedLeft?: SwipeCallback;\n  onSwipedRight?: SwipeCallback;\n  onSwipedUp?: SwipeCallback;\n  onSwipedDown?: SwipeCallback;\n  onSwiping?: SwipeCallback;\n\n  // Configuration Props\n  delta?: number;\n  preventDefaultTouchmoveEvent?: boolean;\n  trackTouch?: boolean;\n  trackMouse?: boolean;\n  rotationAngle?: number;\n}\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\ntype StateEventData = {\n  event?: HandledEvents;\n  deltaX?: number;\n  deltaY?: number;\n  absX?: number;\n  absY?: number;\n  first: boolean;\n  initial: Vector2;\n  velocity?: number;\n  dir?: \"Left\" | \"Right\" | \"Up\" | \"Down\";\n};\n\ntype State = {\n  xy: Vector2;\n  swiping: boolean;\n  eventData?: StateEventData;\n  start: number;\n  first?: boolean;\n  cleanUpTouch?(): void;\n  el?: HTMLElement;\n};\n\ntype Props = {\n  // Event handler/callbacks\n  onSwiped?: SwipeCallback;\n  onSwipedLeft?: SwipeCallback;\n  onSwipedRight?: SwipeCallback;\n  onSwipedUp?: SwipeCallback;\n  onSwipedDown?: SwipeCallback;\n  onSwiping?: SwipeCallback;\n\n  // Configuration Props\n  delta: number;\n  preventDefaultTouchmoveEvent: boolean;\n  trackTouch: boolean;\n  trackMouse: boolean;\n  rotationAngle: number;\n};\n\nconst defaultProps = {\n  preventDefaultTouchmoveEvent: false,\n  delta: 10,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n};\n\nconst initialState: State = {\n  xy: [0, 0],\n  swiping: false,\n  eventData: undefined,\n  start: 0,\n};\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nconst touchStart = \"touchstart\";\nconst touchMove = \"touchmove\";\nconst touchEnd = \"touchend\";\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n) {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return LEFT;\n    }\n    return RIGHT;\n  } else if (deltaY > 0) {\n    return UP;\n  }\n  return DOWN;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\ntype Setter = (state: State, props: Props) => State;\ntype Set = (setter: Setter) => void;\nfunction getHandlers(\n  set: Set,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  (el: any) => (() => void) | undefined\n] {\n  const onStart = (event: HandledEvents) => {\n    // if more than a single touch don't track, for now...\n    if (event && \"touches\" in event && event.touches.length > 1) return;\n    console.log(\"urmit\", event);\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return {\n        ...state,\n        ...initialState,\n        eventData: { initial: [...xy], first: true },\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      if (\n        state.xy[0] === undefined ||\n        state.xy[1] === undefined ||\n        (\"touches\" in event && event.touches.length > 1)\n      ) {\n        return state;\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = state.xy[0] - x;\n      const deltaY = state.xy[1] - y;\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      if (absX < props.delta && absY < props.delta && !state.swiping)\n        return state;\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n      const eventData: EventData = {\n        ...state.eventData,\n        event,\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        velocity,\n        dir,\n      } as EventData;\n\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (props.onSwiping || props.onSwiped || `onSwiped${dir}` in props) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventDefaultTouchmoveEvent &&\n        props.trackTouch &&\n        event.cancelable\n      )\n        event.preventDefault();\n\n      // first is now always false\n      return {\n        ...state,\n        eventData: { ...eventData, first: false },\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: EventData | undefined;\n      if (state.swiping) {\n        eventData = { ...state.eventData, event } as EventData;\n\n        props.onSwiped && props.onSwiped(eventData);\n\n        const onSwipedDir = `onSwiped${eventData.dir}`;\n        if (onSwipedDir in props) {\n          (props as any)[onSwipedDir](eventData);\n        }\n      }\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  const attachTouch = (el: HTMLElement) => {\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void\n      ][] = [\n        [touchStart, onStart],\n        [touchMove, onMove],\n        [touchEnd, onEnd],\n      ];\n      tls.forEach(([e, h]) => el.addEventListener(e, h));\n      // return properly scoped cleanup method for removing listeners\n      return () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: (() => void) | null } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = null;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el);\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState } as State;\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: State,\n  props: Props,\n  attachTouch: (el: any) => (() => void) | undefined\n) {\n  const addState: { cleanUpTouch?(): void } = {};\n  // clean up touch handlers if no longer tracking touches\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = undefined;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(state.el);\n    }\n  }\n  return { ...state, ...addState };\n}\n\nexport function useSwipeable(options: SwipeableOptions): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<Props>({ ...defaultProps });\n  transientProps.current = { ...defaultProps, ...options };\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (cb) =>\n          (transientState.current = cb(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n"],"names":["defaultProps","preventDefaultTouchmoveEvent","delta","rotationAngle","trackMouse","trackTouch","initialState","xy","swiping","eventData","undefined","start","LEFT","RIGHT","UP","DOWN","touchStart","touchMove","touchEnd","mouseMove","mouseUp","getDirection","absX","absY","deltaX","deltaY","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","x","cos","sin","y","getHandlers","set","handlerProps","onStart","event","touches","length","console","log","state","props","document","addEventListener","onMove","onUp","clientX","clientY","initial","first","timeStamp","abs","time","velocity","sqrt","dir","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","onSwipedDir","cleanUpMouse","removeEventListener","e","attachTouch","el","tls","forEach","h","onRef","addState","cleanUpTouch","output","ref","onMouseDown","updateTransientState","useSwipeable","options","transientState","React","transientProps","current","handlers","cb"],"mappings":"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"}